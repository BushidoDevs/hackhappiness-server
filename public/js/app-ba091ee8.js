angular.module("app",["ionic","ngResource","ngMessages","ngCookies","validation.match","app.config","app.controllers","app.services","app.directives"]).run(["$ionicPlatform",function(n){n.ready(function(){window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&StatusBar.styleLightContent()})}]).config(["$stateProvider","$urlRouterProvider","uiGmapGoogleMapApiProvider",function(n,e,t){n.state("app",{url:"","abstract":!0,templateUrl:"templates/tabs.html"}).state("app.map",{url:"/map",views:{"tab-map":{templateUrl:"templates/tab-map.html",controller:"MapCtrl"}}}).state("app.trending",{url:"/trending",resolve:{happinessRange:function(){return[1,2,3,4,5]}},views:{"tab-trending":{templateUrl:"templates/tab-trending.html",controller:"TrendingCtrl"}}}).state("app.about",{url:"/about",views:{"tab-about":{templateUrl:"templates/tab-about.html",controller:"AboutCtrl"}}}).state("app.account",{url:"/account",resolve:{happinessRange:function(){return[1,2,3,4,5]}},views:{"tab-account":{templateUrl:"templates/tab-account.html",controller:"AccountCtrl"}}}),e.otherwise("/map")}]),angular.module("app.controllers",["uiGmapgoogle-maps"]).controller("MapCtrl",["$scope","GeoService","MarkersService","uiGmapIsReady",function(n,e,t,a){a.promise(1).then(function(t){t.forEach(function(t){ionic.Platform.ready(function(){e.getCurrentPosition(function(e){n.map.control.refresh({latitude:e.coords.latitude,longitude:e.coords.longitude})})})})});var s=function(e){"function"==typeof n.markers.control.updateModels&&n.markers.control.updateModels(t.getFakeMarkers(e.data.map.center.lat(),e.data.map.center.lng()))};n.markers={models:[],control:{}},n.map=e.map,n.map.events={bounds_changed:s}}]).controller("TrendingCtrl",["$scope","$ionicModal","$state","Users","Happinesses","happinessRange",function(n,e,t,a,s,i){n.happinesses=[],n.happinessRange=i,n.happinessRangeMin=n.happinessRange[0],n.happinessRangeMax=n.happinessRange[n.happinessRange.length-1],s.get({$sort:{createdDate:-1}}).then(function(e){n.happinesses=e.data}),e.fromTemplateUrl("templates/addHappinessModal.html",{scope:n}).then(function(e){n.modal=e}),n.closeAddHappiness=function(){n.modal.hide()},n.openAddHappiness=function(){a.current().then(function(e){n.modal.show()})["catch"](function(n){t.go("app.account")})}}]).controller("AboutCtrl",["$scope",function(n){}]).controller("AccountCtrl",["$scope","$ionicModal","$cookies","Users","Happinesses","happinessRange",function(n,e,t,a,s,i){var o,r=function(){return a.current().then(l)["catch"](n.login)},l=function(e){n.user=e,p()},p=function(){s.get({user:n.user.id,$sort:{createdDate:-1}}).then(function(e){n.happinesses=e.data})},c=function(e){r().then(n.closeAuth),n.auth.data={},o=null},u=function(){t.sid=null,n.user=null};n.$on("$ionicView.beforeEnter",r),n.happinessRange=i,n.auth={action:"login"},n.auth.setAuthAction=function(e){n.auth.action=e},e.fromTemplateUrl("templates/modal-auth.html",{scope:n}).then(function(e){n.auth.modal=e}),n.login=function(){n.auth.setAuthAction("login"),n.auth.modal.show()},n.register=function(){n.auth.setAuthAction("register"),n.auth.modal.show()},n.closeAuth=function(){n.auth.modal.hide()},n.doRegister=function(e){o=e,e.$valid&&a.register(n.auth.data).then(function(e){n.doLogin(o)})["catch"](function(n){n&&n.errors&&angular.forEach(n.errors,function(n,e){o[e].serverMessage=n,o[e].$setValidity("serverMessage",!1)}),console.error(n)})["finally"](e.$setPristine)},n.doLogin=function(e){o=e,e.$valid&&a.login(n.auth.data).then(c)["catch"](function(n){n.message&&o.password.$setValidity("serverMessage",!1),console.error(n)})["finally"](e.$setPristine)},n.doLogout=function(){a.logout().then(u)["catch"](console.error)}}]).controller("LoginCtrl",["$scope","$ionicHistory",function(n,e){}]).controller("RegisterCtrl",["$scope","$ionicHistory",function(n,e){}]),angular.module("app.services",["dpd","ngCookies"]).factory("Users",["dpd","$cookies","$q",function(n,e,t){var a=n.users;return a.current=function(){var n=t.defer();return a.get("me").success(function(t){t?(e.sid=t.id,n.resolve(t)):n.reject()}).error(n.reject),n.promise},a.register=function(n){var s=t.defer();return a.post(n).success(function(n){e.sid=n.id,s.resolve(n)}).error(s.reject),s.promise},a.login=function(n){var s=t.defer();return a.exec("login",n).success(function(n){e.sid=n.id,s.resolve(n)}).error(s.reject),s.promise},a.logout=function(){var n=t.defer();return a.exec("logout").success(function(t){e.sid=null,n.resolve()}).error(n.reject),n.promise},a}]).factory("Happinesses",["dpd",function(n){return n.happinesses}]).factory("GeoService",["$resource",function(n){return{geocoder:new google.maps.Geocoder,getCurrentPosition:function(n){navigator.geolocation?navigator.geolocation.getCurrentPosition(function(e){n.call(null,e)}):alert("Unable to locate current position")},map:{center:{latitude:41.4,longitude:2.16},zoom:14,control:{},bounds:{}}}}]).factory("MarkersService",["$resource",function(n){return{getFakeMarkers:function(n,e){for(var t=[],a=function(n,e,t,a){void 0===a&&(a="id");var s=e+.01*Math.random(),i=t+.01*Math.random(),o={latitude:s,longitude:i,title:"m"+n,icon:"img/icon.png",options:{labelContent:"HackHappiness",labelClass:"label-background"}};return o[a]=n,o},s=0;3>s;s++)t.push(a(s,n,e));return t}}}]),angular.module("app.directives",["app.services"]).directive("hackhappinesAddhackhappines",["Happinesses","GeoService",function(n,e){return{restrict:"E",replace:!0,templateUrl:"templates/addHappiness.html",compile:function(t,a){return function(t){t.addHappiness=function(){n.post(t.happinessData).success(t.closeAddHappiness)};var a;t.startHappiness=function(){i(),a=setInterval(i,s)},t.stopHappiness=function(){clearInterval(a),t.isHappinessLevelSet=!0};var s=500,i=function(){t.happinessData.level<t.happinessRangeMax&&t.happinessData.level++},o=function(n,a){if(null===n&&null===a)t.happinessData.latlng=null,t.happinessData.city=null,t.happinessData.country=null;else{t.happinessData.latlng={lat:n,lng:a};var s=new google.maps.LatLng(n,a);e.geocoder.geocode({latLng:s},function(n,e){if(e==google.maps.GeocoderStatus.OK){if(console.log(n),n&&n.length){var a=n.length-1;if(a>1){var s=n[a-2].formatted_address;s=s.split(", "),t.happinessData.city=s[0],t.happinessData.country=s[1]}else t.happinessData.country=n[a].formatted_address,t.happinessData.city=null}}else console.error(e);t.$digest()})}};t.initHappinesData=function(){t.happinessData={level:0,message:"",latlng:{}},t.allowGeolocale=!1,t.geolocating=!1,t.toggleAllowGeolocale=function(){t.allowGeolocale?(t.geolocating=!0,e.getCurrentPosition(function(n){t.geolocating&&o(n.coords.latitude,n.coords.longitude),t.geolocating=!1})):(t.geolocating=!1,o(null,null))},t.isHappinessLevelSet=!1},t.initHappinesData()}}}}]),angular.module("app").run(["$templateCache",function(n){n.put("templates/addHappiness.html",'<div>\n  <div class="text-center padding-vertical" ng-hide="isHappinessLevelSet">\n    <button type="button" class="button button-large icon ion-happy" on-touch="startHappiness()" on-release="stopHappiness()"></button>\n  </div>\n  <form ng-submit="addHappiness()" class="list" ng-show="isHappinessLevelSet">\n    <div class="item range">\n      <i class="icon ion-happy-outline"></i>\n      <input type="range" ng-model="happinessData.level" min="{{happinessRangeMin}}" max="{{happinessRangeMax}}" step="1">\n      <i class="">{{happinessData.level}}</i>\n    </div>\n    <label class="item item-input item-stacked-label">\n      <span class="input-label">What is making you so happy?</span>\n      <textarea type="text" ng-model="happinessData.message" placehoder="#Hackhappines"></textarea>\n    </label>\n    <div class="item item-toggle">\n      Geolocale\n      <label class="toggle">\n        <input type="checkbox" ng-model="allowGeolocale" ng-change="toggleAllowGeolocale()">\n        <div class="track">\n          <div class="handle"></div>\n        </div>\n      </label>\n    </div>\n    <div class="item" ng-show="geolocating || happinessData.city || happinessData.country">\n      <ion-spinner ng-show="geolocating"></ion-spinner>\n      <p ng-if="happinessData.city && happinessData.city">\n        <span ng-if="happinessData.city">{{happinessData.city}}</span><span ng-if="happinessData.city && happinessData.city">, </span><span ng-if="happinessData.country">{{happinessData.country}}</span>\n      </p>\n    </div>\n    <label class="item">\n      <button class="button button-block button-positive" type="submit">Submit</button>\n    </label>\n  </form>\n</div>'),n.put("templates/addHappinessModal.html",'<ion-modal-view>\n  <ion-header-bar>\n    <h1 class="title">Happiness</h1>\n    <div class="buttons">\n      <button class="button button-clear" ng-click="closeAddHappiness()">Close</button>\n    </div>\n  </ion-header-bar>\n  <ion-content>\n    <hackhappines-addhackhappines></hackhappines-addhackhappines>\n  </ion-content>\n  </ion-content>\n</ion-modal-view>\n'),n.put("templates/modal-auth-login.html",'<form name="loginForm" ng-submit="doLogin(loginForm)" novalidate>\n	<div class="list">\n		<label class="item item-input item-floating-label" ng-class="{\n			\'has-error\': loginForm.username.$dirty && loginForm.username.$invalid\n		}">\n			<span class="input-label">Email</span>\n			<input type="text" name="username" ng-model="auth.data.username" ng-model-options="{ updateOn: \'blur\' }" ng-minlength="6" ng-maxlength="255" required placeholder="Email">\n		</label>\n		<div class="item form-errors" ng-messages="loginForm.username.$error" role="alert" ng-show="loginForm.username.$dirty && loginForm.username.$invalid">\n			<div class="form-error" ng-message="required">Email is required</div>\n			<div class="form-error" ng-message="minlength">Your email must have more than 6 characters</div>\n			<div class="form-error" ng-message="maxlength">Your email must have less than 255 characters</div>\n		</div>\n		<label class="item item-input item-floating-label" ng-class="{\n			\'has-error\': loginForm.password.$dirty && loginForm.password.$invalid\n		}">\n			<span class="input-label">Password</span>\n			<input type="password" name="password" ng-model="auth.data.password" ng-model-options="{ updateOn: \'blur\' }" ng-minlength="6"required placeholder="Password">\n		</label>\n		<div class="item form-errors" ng-messages="loginForm.password.$error" role="alert" ng-show="loginForm.password.$dirty && loginForm.password.$invalid">\n			<div class="form-error" ng-message="required">Password is required</div>\n			<div class="form-error" ng-message="minlength">Your password must be at least 6 characters long</div>\n			<div class="form-error" ng-message="serverMessage">Username/password not valid</div>\n		</div>\n		<label class="item">\n			<button class="button button-block button-positive" type="submit">Log in</button>\n		</label>\n	</div>\n</form>'),n.put("templates/modal-auth-register.html",'<form name="registerForm" ng-submit="doRegister(registerForm)" novalidate>\n	<div class="list">\n		<label class="item item-input item-floating-label" ng-class="{\n			\'has-error\': signinForm.name.$invalid\n		}">\n			<span class="input-label">First name</span>\n			<input type="text" name="firstName" ng-model="auth.data.firstName" ng-model-options="{ updateOn: \'blur\' }" ng-minlength="3" ng-maxlength="255" required placeholder="First name">\n		</label>\n		<div class="item form-errors" ng-messages="registerForm.firstName.$error" role="alert" ng-show="registerForm.firstName.$invalid">\n			<div class="form-error" ng-message="required">First name is required</div>\n			<div class="form-error" ng-message="minlength">Your name must have more than 3 characters</div>\n			<div class="form-error" ng-message="maxlength">Your name must have less than 255 characters</div>\n		</div>\n		<label class="item item-input item-floating-label" ng-class="{\n			\'has-error\': signinForm.username.$invalid\n		}">\n			<span class="input-label">Email</span>\n			<input type="text" name="username" ng-model="auth.data.username" ng-model-options="{ updateOn: \'blur\' }" ng-minlength="6" ng-maxlength="255" required placeholder="Email">\n		</label>\n		<div class="item form-errors" ng-messages="registerForm.username.$error" role="alert" ng-show="registerForm.username.$invalid">\n			<div class="form-error" ng-message="required">Email is required</div>\n			<div class="form-error" ng-message="minlength">Your email must have more than 6 characters</div>\n			<div class="form-error" ng-message="maxlength">Your email must have less than 255 characters</div>\n			<div class="form-error" ng-message="serverMessage">{{registerForm.username.serverMessage}}</div>\n		</div>\n		<label class="item item-input item-floating-label" ng-class="{\n			\'has-error\': signinForm.password.$invalid\n		}">\n			<span class="input-label">Password</span>\n			<input type="password" name="password" ng-model="auth.data.password" ng-model-options="{ updateOn: \'blur\' }" ng-minlength="6" required placeholder="Password">\n		</label>\n		<div class="item form-errors" ng-messages="registerForm.password.$error" role="alert" ng-show="registerForm.password.$invalid">\n			<div class="form-error" ng-message="required">Password is required</div>\n			<div class="form-error" ng-message="minlength">Your password must be at least 6 characters long</div>\n		</div>\n		<label class="item item-input item-floating-label" ng-class="{\n			\'has-error\': signinForm.password2.$invalid\n		}">\n			<span class="input-label">Confirm password</span>\n			<input type="password" name="password2" ng-model="auth.data.password2" ng-model-options="{ updateOn: \'blur\' }" ng-minlength="6" match="registerForm.password" required placeholder="Confirm password">\n		</label>\n		<div class="item form-errors" ng-messages="registerForm.password2.$error" role="alert" ng-show="registerForm.password2.$invalid">\n			<div class="form-error" ng-message="required">Confirm password is required</div>\n			<div class="form-error" ng-message="match">Write the same password twice</div>\n		</div>\n		<label class="item">\n			<button class="button button-block button-positive" type="submit">Continue</button>\n		</label>\n	</div>\n</form>'),n.put("templates/modal-auth.html",'<div class="modal">\n	<ion-header-bar>\n		<h1 class="title">Auth</h1>\n		<div class="buttons">\n			<button class="button button-clear" ng-click="closeAuth()">Close</button>\n		</div>\n	</ion-header-bar>\n	<ion-content>\n		<div ng-include="\'templates/modal-auth-\'+auth.action+\'.html\'"></div>\n	</ion-content>\n	<ion-footer-bar>\n		<div class="button-bar">\n		  <button class="button button-clear" ng-click="auth.setAuthAction(\'login\')" ng-class="{\n		  	\'active\' : auth.action === \'login\'\n		  }">Log in</button>\n		  <button class="button button-clear" ng-click="auth.setAuthAction(\'register\')" ng-class="{\n		  	\'active\' : auth.action === \'register\'\n		  }">Register</button>\n		</div>\n	</ion-footer-bar>\n</div>\n</div>'),n.put("templates/tab-about.html",'<ion-view view-title="About">\n  <ion-content>\n    <ion-list>\n      <ion-item class="item-text-wrap">La aplicación ha sido desarrollada de manera altruista por la comunidad de desarrolladores.</ion-item>\n      <ion-item class="item-divider">\n        Desarrolladores\n      </ion-item>\n      <ion-item class="item-avatar item-text-wrap">\n        <img src="img/davidpich.png">\n        <h2>David Pich</h2>\n        <p></p>\n      </ion-item>\n      <ion-item class="item-avatar item-text-wrap">\n        <img src="img/jorgecasar.png">\n        <h2>Jorge del Casar</h2>\n        <p>Co-founder & CTO, Geeks2Team.</p>\n      </ion-item> \n    </ion-list>\n  </ion-content>\n</ion-view>\n'),n.put("templates/tab-account.html",'<ion-view view-title="Account">\n	<ion-nav-buttons side="secondary">\n		<button class="button button-clear" ng-click="doLogout()" ng-show="user">Logout</button>\n		<button class="button button-clear" ng-click="login()" ng-hide="user">Login</button>\n	</ion-nav-buttons>\n	<ion-content>\n		<ion-list ng-show="user">\n			<ion-item ng-class="{\n				\'item-thumbnail-left\': user.img\n			}">\n				<img ng-show="user.img" ng-src="{{user.img}}">\n				<h2>{{user.firstName}}</h2>\n				<p>{{user.username}}</p>\n			</ion-item>\n			<ion-item class=" item-divider">\n				My happinessess\n			</ion-item>\n			<ion-item ng-repeat="happiness in happinesses track by $index" type="item-text-wrap">\n				<div class="padding-vertical text-center">\n					<i class="button button-small button-icon icon" ng-repeat="n in happinessRange" ng-class="{\n					\'ion-happy\': n <= happiness.level,\n					\'ion-happy-outline\': n > happiness.level\n					}"></i>\n				</div>\n				<h2>{{happiness.message}}</h2>\n				<p ng-if="happiness.city && happiness.city">\n					<span ng-if="happiness.city">{{happiness.city}}</span>\n					<span ng-if="happiness.city && happiness.city">, </span>\n					<span ng-if="happiness.country">{{happiness.country}}</span>\n				</p>\n				</div>\n			</ion-item>\n		</ion-list>\n	</ion-content>\n</ion-view>\n'),n.put("templates/tab-map.html","<ion-view view-title=\"Map\">\n  <ion-content>\n  	<ui-gmap-google-map center='map.center' \n  						zoom='map.zoom'\n  						control='map.control'\n  						bounds='map.bounds'\n              events='map.events'\n              pan=\"true\">\n  		<ui-gmap-markers 	models=\"markers.models\"\n  							coords=\"'self'\"\n  							icon=\"'icon'\"\n                control=\"markers.control\"\n                options=\"'options'\">\n        </ui-gmap-markers>\n  	</ui-gmap-google-map>\n  </ion-content>\n</ion-view>\n"),n.put("templates/tab-trending.html",'<ion-view view-title="Trendings {{allowGeolocale}}">\n  <ion-nav-buttons side="secondary">\n    <button class="button button-icon icon ion-ios-plus-empty" ng-click="openAddHappiness()"></button>\n  </ion-nav-buttons>\n  <ion-content>\n    <ion-list>\n      <ion-item ng-repeat="happiness in happinesses track by $index" type="item-text-wrap">\n        <div class="padding-vertical text-center">\n          <i class="button button-small button-icon icon" ng-repeat="n in happinessRange" ng-class="{\n        \'ion-happy\': n <= happiness.level,\n        \'ion-happy-outline\': n > happiness.level\n        }"></i>\n        </div>\n        <h2>{{happiness.message}}</h2>\n        <p ng-if="happiness.city && happiness.city">\n          <span ng-if="happiness.city">{{happiness.city}}</span><span ng-if="happiness.city && happiness.city">, </span><span ng-if="happiness.country">{{happiness.country}}</span>\n        </p>\n      </ion-item>\n    </ion-list>\n  </ion-content>\n</ion-view>\n'),n.put("templates/tabs.html",'<!--\nCreate tabs with an icon and label, using the tabs-positive style.\nEach tab\'s child <ion-nav-view> directive will have its own\nnavigation history that also transitions its views in and out.\n-->\n<ion-tabs class="tabs-icon-top tabs-color-active-positive">\n\n  <!-- Map Tab -->\n  <ion-tab title="Map" icon-off="ion-ios-location-outline" icon-on="ion-ios-location" ui-sref="app.map">\n    <ion-nav-view name="tab-map"></ion-nav-view>\n  </ion-tab>\n\n  <!-- Trending Tab -->\n  <ion-tab title="Trending" icon-off="ion-ios-bolt-outline" icon-on="ion-ios-bolt" ui-sref="app.trending">\n    <ion-nav-view name="tab-trending"></ion-nav-view>\n  </ion-tab>\n\n  <!-- About Tab -->\n  <ion-tab title="About" icon-off="ion-ios-information-outline" icon-on="ion-ios-information" ui-sref="app.about">\n    <ion-nav-view name="tab-about"></ion-nav-view>\n  </ion-tab>\n\n  <!-- Account Tab -->\n  <ion-tab title="Account" icon-off="ion-ios-person-outline" icon-on="ion-ios-person" ui-sref="app.account">\n    <ion-nav-view name="tab-account"></ion-nav-view>\n  </ion-tab>\n\n\n</ion-tabs>\n')}]),angular.module("app.config",[]).constant("dpdConfig",{collections:["happinesses","users"],serverRoot:"https://hackhappiness.herokuapp.com/",socketOptions:{reconnectionDelayMax:3e3},useSocketIo:!1,noCache:!1});